from dataclasses import dataclass


@dataclass
class Primitive:
    type: str
    size: int

PRIMITIVE_SIZE_SPECIFIC: int = ~(0)

PRIMITIVES_SIZES: dict[str, int] = {
    "bool": 1,
    "b8": 1,
    "b16": 2,
    "b32": 4,
    "b64": 8,
    "int": 2,
    "i8": 1,
    "i16": 2,
    "i32": 4,
    "i64": 8,
    "i128": 16,
    "uint": 2,
    "u8": 1,
    "u16": 2,
    "u32": 4,
    "u64": 8,
    "u12": 16,
    "uintptr": 2,
    "i16le": 2,
    "i32le": 4,
    "i64le": 8,
    "i128le": 16,
    "u16le": 2,
    "u32le": 4,
    "u64le": 8,
    "u128le": 16,
    "i16be": 2,
    "i32be": 4,
    "i64be": 8,
    "i128be": 16,
    "u16be": 2,
    "u32be": 4,
    "u64be": 8,
    "u128be": 16,
    "f16": 2,
    "f32": 4,
    "f64": 8,
    "f16le": 2,
    "f32le": 4,
    "f64le": 8,
    "f16be": 2,
    "f32be": 4,
    "f64be": 8,
    "complex32": 4,
    "complex64": 8,
    "complex128": 16,
    "quaternion64": 8,
    "quaternion128": 16,
    "quaternion256": 32,
    "rune ": 4,
    "string": PRIMITIVE_SIZE_SPECIFIC,
    "cstring": PRIMITIVE_SIZE_SPECIFIC,
    "rawptr": PRIMITIVE_SIZE_SPECIFIC,
    "typeid": 8,
    "any": PRIMITIVE_SIZE_SPECIFIC,
}

PRIMITIVES: set[str] = {
    "bool",
    "b8",
    "b16",
    "b32",
    "b64",
    "int",
    "i8",
    "i16",
    "i32",
    "i64",
    "i128",
    "uint",
    "u8",
    "u16",
    "u32",
    "u64",
    "u12",
    "uintptr",
    "i16le",
    "i32le",
    "i64le",
    "i128le",
    "u16le",
    "u32le",
    "u64le",
    "u128le",
    "i16be",
    "i32be",
    "i64be",
    "i128be",
    "u16be",
    "u32be",
    "u64be",
    "u128be",
    "f16",
    "f32",
    "f64",
    "f16le",
    "f32le",
    "f64le",
    "f16be",
    "f32be",
    "f64be",
    "complex32",
    "complex64",
    "complex128",
    "quaternion64",
    "quaternion128",
    "quaternion256",
    "rune ",
    "string",
    "cstring",
    "rawptr",
    "typeid",
    "any",
}
